{"version":3,"sources":["reportWebVitals.ts","cmp/AppFooter.tsx","services/async-storage.service.ts","services/storageService.ts","services/util.service.ts","services/starwars.service.ts","cmp/FilmPreview.tsx","cmp/FilmList.tsx","assets/imgs/bars-loader.svg","cmp/Loading.tsx","cmp/SideBar.tsx","services/event-bus.service.ts","cmp/UserMsg.tsx","routes/routes.ts","pages/MovieDetails.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppFotter","className","storageService","query","get","post","put","remove","entityType","a","delay","entities","JSON","parse","localStorage","getItem","Promise","resolve","setTimeout","entityId","entity","find","_id","Error","newEntity","_makeId","push","_save","updatedEntity","idx","findIndex","id","splice","setItem","stringify","length","txt","possible","i","charAt","Math","floor","random","localStorageService","save","key","value","load","defaultValue","utilService","makeId","starwarsService","getMovies","getById","STARWARS_DB","STARWARS_API","_getMoviesAPI","movies","axios","res","data","results","map","result","isFavorite","title","director","releaseDate","release_date","details","opening_crawl","img","_getImg","movieId","movie","FilmPreview","activeClassName","exact","to","FilmList","Loading","src","Loader","alt","SideBar","useState","setMovies","useEffect","loadMovies","eventBusService","on","eventName","listener","callListener","detail","window","addEventListener","removeEventListener","emit","dispatchEvent","CustomEvent","showSuccessMsg","showUserMsg","showErrorMsg","type","console","log","myBus","UserMsg","removeEvent","state","msg","this","setState","msgType","onClick","React","Component","routes","path","component","match","setMovie","loadMovie","params","App","route","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d01421f.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function AppFotter() {\r\n    return (\r\n        <footer className=\"footer full flex justify-center\">\r\n            <p>&copy; coffee rights</p>\r\n        </footer>\r\n    );\r\n}","import IMovie from \"../interface/IMovie.interface\"\r\nexport const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n}\r\n\r\nasync function query(entityType: string, delay = 1100): Promise<any> {\r\n    const entities = JSON.parse(localStorage.getItem(entityType) || 'null')\r\n    return new Promise((resolve) => setTimeout(resolve, delay, entities))\r\n}\r\n\r\nasync function get(entityId: string, entityType: string): Promise<IMovie> {\r\n    const entities = await query(entityType)\r\n    const entity = entities.find((entity: any) => entity._id === entityId)\r\n    if (!entity) throw new Error(`Cannot get, Item ${entityId} of type: ${entityType} does not exist`)\r\n    return entity;\r\n}\r\n\r\nasync function post(newEntity: any, entityType: string): Promise<IMovie> {\r\n    newEntity = {\r\n        ...newEntity,\r\n        _id: _makeId()\r\n    }\r\n    const entities = await query(entityType)\r\n    entities.push(newEntity)\r\n    _save(entities, entityType)\r\n    return newEntity\r\n}\r\n\r\nasync function put(updatedEntity: any, entityType: string): Promise<IMovie> {\r\n    const entities = await query(entityType)\r\n    const idx = entities.findIndex((entity: any) => entity._id === updatedEntity._id)\r\n    if (idx < 0) { throw new Error(`Cannot update item, id \"${updatedEntity.id}\" was not found `) }\r\n    entities[idx] = updatedEntity\r\n    _save(entities, entityType)\r\n    return updatedEntity\r\n}\r\n\r\nasync function remove(entityId: number, entityType: string): Promise<boolean> {\r\n    const entities = await query(entityType)\r\n    const idx = entities.findIndex((entity: any) => entity._id === entityId)\r\n    if (idx !== -1) entities.splice(idx, 1)\r\n    else throw new Error(`Cannot remove, item id \"${entityId}\"\" of type: ${entityType} does not exist`)\r\n    _save(entities, entityType)\r\n    return true;\r\n}\r\n\r\n\r\nfunction _save(entities: IMovie[], entityType: string) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length: number = 5): number {\r\n    var txt = ''\r\n    var possible = '0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return +txt\r\n}","export const localStorageService = {\r\n    save,\r\n    load\r\n}\r\n\r\nfunction save(key: string, value: any) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key: string, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\n","export const utilService = {\n    makeId,\n}\n\nfunction makeId(length: number = 16): string {\n    let txt = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return txt;\n}\n\n","'use strict'\r\nimport axios from 'axios'\r\nimport IMovie from '../interface/IMovie.interface';\r\nimport { storageService } from './async-storage.service';\r\nimport { httpService } from './http.service';\r\nimport { localStorageService } from './storageService';\r\nimport { utilService } from './util.service';\r\n\r\nexport const starwarsService = {\r\n    getMovies,\r\n    getById\r\n}\r\n\r\nconst STARWARS_DB: string = 'starwarsDB';\r\nconst STARWARS_API: string = 'https://swapi.dev/api/films/'\r\n\r\nasync function getMovies(): Promise<IMovie[]> {\r\n    const movies = await storageService.query(STARWARS_DB) || await _getMoviesAPI()\r\n    return movies\r\n}\r\n\r\nasync function _getMoviesAPI(): Promise<IMovie[]> {\r\n    const res: any = await axios.get(STARWARS_API)\r\n    const movies = res.data.results.map((result: any) => {\r\n        return {\r\n            _id: utilService.makeId(),\r\n            isFavorite: false,\r\n            title: result.title,\r\n            director: result.director,\r\n            releaseDate: result.release_date,\r\n            details: result.opening_crawl,\r\n            img: _getImg(result.title)\r\n        }\r\n    })\r\n    localStorageService.save(STARWARS_DB, movies)\r\n    return movies\r\n}\r\n\r\nfunction _getImg(title: string): string {\r\n    switch (title) {\r\n        case 'A New Hope':\r\n            return 'https://images-na.ssl-images-amazon.com/images/I/81aA7hEEykL.jpg'\r\n        case 'The Empire Strikes Back':\r\n            return 'https://images-na.ssl-images-amazon.com/images/I/91eOgodm4nL.jpg'\r\n        case 'Return of the Jedi':\r\n            return 'https://images-na.ssl-images-amazon.com/images/I/81g8vEs4ixL.jpg'\r\n        case 'The Phantom Menace':\r\n            return 'https://m.media-amazon.com/images/I/71rFhtOvY+L._SL1372_.jpg'\r\n        case 'Attack of the Clones':\r\n            return 'https://upload.wikimedia.org/wikipedia/en/thumb/5/5d/Attackoftheclones_novel.jpg/220px-Attackoftheclones_novel.jpg'\r\n        case 'Revenge of the Sith':\r\n            return 'https://www.michigansportszone.com/wp-content/uploads/2021/10/Ep3DVD.jpg'\r\n        default:\r\n            return 'https://images-na.ssl-images-amazon.com/images/I/81aA7hEEykL.jpg'\r\n    }\r\n}\r\n\r\nasync function getById(movieId: string): Promise<IMovie> {\r\n    const movie = await storageService.get(movieId, STARWARS_DB)\r\n    return movie\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport IMovie from '../interface/IMovie.interface'\r\n\r\n\r\ninterface PropType {\r\n    movie: IMovie\r\n}\r\n\r\nexport const FilmPreview = ({ movie }: PropType) => {\r\n    return (\r\n        <section className=\"film-preview\">\r\n            <NavLink activeClassName=\"active\" exact to={`/movie/${movie._id}`}>{movie.title}</NavLink>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport IMovie from '../interface/IMovie.interface'\r\nimport { FilmPreview } from './FilmPreview'\r\n\r\ninterface PropType {\r\n    movies: IMovie[],\r\n}\r\n\r\nexport const FilmList = ({ movies }: PropType) => {\r\n    return (\r\n        <nav className=\"nav-movie-list\">\r\n            {movies.map((movie: IMovie) => (<FilmPreview key={movie._id} movie={movie} />))}\r\n        </nav>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bars-loader.8e56973c.svg\";","import React from 'react';\nimport Loader from '../assets/imgs/bars-loader.svg';\n\nexport function Loading() {\n    return (\n        <div className=\"loader flex align-center justify-center\">\n            <img src={Loader} alt=\"loading...\" />\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\r\nimport { starwarsService } from '../services/starwars.service';\r\nimport { FilmList } from './FilmList';\r\nimport { Loading } from './Loading';\r\n\r\nexport const SideBar = () => {\r\n\r\n    const [movies, setMovies] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        loadMovies()\r\n    }, [])\r\n\r\n    const loadMovies = async () => {\r\n        const movies = await starwarsService.getMovies()\r\n        setMovies(movies)\r\n    }\r\n\r\n    if (!movies) return <Loading />\r\n\r\n    return (\r\n        <aside className=\"side-bar\">\r\n            <FilmList movies={movies} />\r\n        </aside>\r\n    )\r\n}\r\n","export const eventBusService = {\n    on,\n    emit,\n    showSuccessMsg,\n    showErrorMsg\n};\n\nfunction on(eventName: string, listener: any) {\n\n    const callListener = ({ detail }: any) => {\n        listener(detail);\n    };\n\n    window.addEventListener(eventName, callListener);\n\n    return () => {\n        window.removeEventListener(eventName, callListener);\n    };\n}\n\nfunction emit(eventName: string, data: any) {\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\n}\n\n\nexport function showUserMsg(txt: string, type: string = '') {\n    eventBusService.emit('show-user-msg', { txt, type })\n    console.log('User MSG!!')\n}\nexport function showSuccessMsg(txt: string) {\n    showUserMsg(txt, 'success')\n}\nexport function showErrorMsg(txt: string) {\n    showUserMsg(txt, 'danger')\n}\n\nwindow.myBus = eventBusService;\nwindow.showUserMsg = showUserMsg;\n\n\ndeclare global {\n    interface Window { myBus: any, showUserMsg: any }\n}\n\n","import React from 'react'\n\nimport { eventBusService } from '../services/event-bus.service'\n\n\nexport class UserMsg extends React.Component {\n\n  removeEvent: any;\n\n  state: any | null = {\n    msg: null\n  }\n\n  componentDidMount() {\n    this.removeEvent = eventBusService.on('show-user-msg', (msg: string) => {\n      this.setState({ msg })\n      setTimeout(() => {\n        this.setState({ msg: null })\n      }, 1500)\n    })\n  }\n\n  componentWillUnmount() {\n    this.removeEvent()\n  }\n\n  render() {\n    if (!this.state.msg) return <></>\n    const msgType = this.state.msg.type || ''\n    return (\n      <section className={`user-msg  flex direction-row align-center ${msgType}`}>\n        <div className=\" txt-msg flex direction-row align-center\">\n          {this.state.msg.txt}\n        </div>\n        <button onClick={() => {\n          this.setState({ msg: null })\n        }}>x</button>\n      </section>\n    )\n  }\n}\n","import { Home } from \"../pages/Home\";\nimport { MovieDetails } from \"../pages/MovieDetails\";\n\ninterface IRoutes {\n    path: string,\n    component: any\n}\n\nconst routes: IRoutes[] = [\n    {\n        path: '/movie/:movieId',\n        component: MovieDetails,\n    },\n    {\n        path: '/',\n        component: Home,\n    }\n]\n\nexport default routes;\n","import React, { useEffect, useState } from 'react'\r\nimport { Loading } from '../cmp/Loading';\r\nimport { starwarsService } from '../services/starwars.service';\r\n\r\nexport const MovieDetails = ({ match }: any) => {\r\n\r\n    const [movie, setMovie] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        loadMovie();\r\n    }, [match.params.movieId]);\r\n\r\n    const loadMovie = async () => {\r\n        const { movieId } = match.params;\r\n        const movie = await starwarsService.getById(movieId)\r\n        setMovie(movie)\r\n    };\r\n\r\n    if (!movie) return <Loading />\r\n\r\n    return (\r\n        <section className=\"movie-details\">\r\n            <img src={movie.img} />\r\n            <h2>{movie.title}</h2>\r\n            <h3>{movie.director}</h3>\r\n            <h4>{movie.releaseDate}</h4>\r\n            <p>{movie.details}</p>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <section className=\"home tac\">\r\n            <img src=\"https://media.urbanpost.it/wp-content/uploads/2015/08/Star-Wars.jpg\" />\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { AppFotter } from './cmp/AppFooter';\nimport { AppHeader } from './cmp/AppHeader';\nimport { SideBar } from './cmp/SideBar';\nimport { UserMsg } from './cmp/UserMsg';\nimport routes from './routes/routes';\nimport { starwarsService } from './services/starwars.service';\n\nfunction App() {\n\n  return (\n    <div className=\"main-container\">\n      <Router>\n        <UserMsg />\n        {/* <AppHeader /> */}\n        <SideBar />\n        <main >\n          <Switch>\n            {routes.map(route => <Route key={route.path} component={route.component} path={route.path} />)}\n          </Switch>\n        </main>\n        <AppFotter />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../src/assets/styles/main.scss';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}