{"version":3,"sources":["reportWebVitals.ts","cmp/AppFooter.tsx","cmp/AppHeader.tsx","services/event-bus.service.ts","cmp/UserMsg.tsx","cmp/FilmPreview.tsx","cmp/FilmList.tsx","assets/imgs/bars-loader.svg","cmp/Loading.tsx","services/async-storage.service.ts","services/storageService.ts","services/util.service.ts","services/starwars.service.ts","pages/FilmsApp.tsx","routes/routes.ts","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppFotter","className","AppHeader","activeClassName","exact","to","eventBusService","on","eventName","listener","callListener","detail","window","addEventListener","removeEventListener","emit","data","dispatchEvent","CustomEvent","showSuccessMsg","txt","showUserMsg","showErrorMsg","type","console","log","myBus","UserMsg","removeEvent","state","msg","this","setState","setTimeout","msgType","onClick","React","Component","FilmPreview","movie","title","director","releaseDate","details","FilmList","movies","map","_id","Loading","src","Loader","alt","storageService","query","get","post","put","remove","entityType","a","delay","entities","JSON","parse","localStorage","getItem","Promise","resolve","entityId","entity","find","id","Error","newEntity","_makeId","push","_save","updatedEntity","idx","findIndex","splice","setItem","stringify","length","possible","i","charAt","Math","floor","random","localStorageService","save","key","value","load","defaultValue","utilService","makeId","starwarsService","getMovies","STARWARS_DB","STARWARS_API","_getMoviesAPI","axios","res","results","result","isFavorite","release_date","opening_crawl","routes","path","component","useState","setMovies","useEffect","loadMovies","App","route","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.538b57e6.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function AppFotter() {\r\n    return (\r\n        <footer className=\"footer full flex justify-center\">\r\n            <p>&copy; coffee rights</p>\r\n        </footer>\r\n    );\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const AppHeader = () => {\r\n\r\n    return (\r\n        <header className=\" main-header full flex space-between\">\r\n            <nav className=\"flex justify-center\">\r\n                <NavLink activeClassName=\"active\" exact to=\"/\" >Films</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n","export const eventBusService = {\n    on,\n    emit,\n    showSuccessMsg,\n    showErrorMsg\n};\n\nfunction on(eventName: string, listener: any) {\n\n    const callListener = ({ detail }: any) => {\n        listener(detail);\n    };\n\n    window.addEventListener(eventName, callListener);\n\n    return () => {\n        window.removeEventListener(eventName, callListener);\n    };\n}\n\nfunction emit(eventName: string, data: any) {\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\n}\n\n\nexport function showUserMsg(txt: string, type: string = '') {\n    eventBusService.emit('show-user-msg', { txt, type })\n    console.log('User MSG!!')\n}\nexport function showSuccessMsg(txt: string) {\n    showUserMsg(txt, 'success')\n}\nexport function showErrorMsg(txt: string) {\n    showUserMsg(txt, 'danger')\n}\n\nwindow.myBus = eventBusService;\nwindow.showUserMsg = showUserMsg;\n\n\ndeclare global {\n    interface Window { myBus: any, showUserMsg: any }\n}\n\n","import React from 'react'\n\nimport { eventBusService } from '../services/event-bus.service'\n\n\nexport class UserMsg extends React.Component {\n\n  removeEvent: any;\n\n  state: any | null = {\n    msg: null\n  }\n\n  componentDidMount() {\n    this.removeEvent = eventBusService.on('show-user-msg', (msg: string) => {\n      this.setState({ msg })\n      setTimeout(() => {\n        this.setState({ msg: null })\n      }, 1500)\n    })\n  }\n\n  componentWillUnmount() {\n    this.removeEvent()\n  }\n\n  render() {\n    if (!this.state.msg) return <></>\n    const msgType = this.state.msg.type || ''\n    return (\n      <section className={`user-msg  flex direction-row align-center ${msgType}`}>\n        <div className=\" txt-msg flex direction-row align-center\">\n          {this.state.msg.txt}\n        </div>\n        <button onClick={() => {\n          this.setState({ msg: null })\n        }}>x</button>\n      </section>\n    )\n  }\n}\n","import React from 'react'\r\nimport IMovie from '../interface/IMovie.interface'\r\n\r\n\r\ninterface PropType {\r\n    movie: IMovie\r\n}\r\n\r\nexport const FilmPreview = ({ movie }: PropType) => {\r\n    return (\r\n        <section className=\"film-preview\">\r\n            <h2>{movie.title}</h2>\r\n            <h3>{movie.director}</h3>\r\n            <h4>{movie.releaseDate}</h4>\r\n            <p>{movie.details}</p>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport IMovie from '../interface/IMovie.interface'\r\nimport { FilmPreview } from './FilmPreview'\r\n\r\ninterface PropType {\r\n    movies: IMovie[]\r\n}\r\n\r\nexport const FilmList = ({ movies }: PropType) => {\r\n    return (\r\n        <section className=\"cart-list\">\r\n            {movies.map((movie: IMovie) => (<FilmPreview key={movie._id} movie={movie} />))}\r\n        </section>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bars-loader.8e56973c.svg\";","import React from 'react';\nimport Loader from '../assets/imgs/bars-loader.svg';\n\nexport function Loading() {\n    return (\n        <div className=\"loader flex align-center justify-center\">\n            <img src={Loader} alt=\"loading...\" />\n        </div>\n    )\n}\n","import IPokemon from \"../interface/IPokemon.interface\"\r\n\r\nexport const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n}\r\n\r\nasync function query(entityType: string, delay = 1100): Promise<any> {\r\n    const entities = JSON.parse(localStorage.getItem(entityType) || 'null')\r\n    return new Promise((resolve) => setTimeout(resolve, delay, entities))\r\n}\r\n\r\nasync function get(entityId: number, entityType: string): Promise<IPokemon> {\r\n    const entities = await query(entityType)\r\n    const entity = entities.find((entity: any) => entity.id === entityId)\r\n    if (!entity) throw new Error(`Cannot get, Item ${entityId} of type: ${entityType} does not exist`)\r\n    return entity;\r\n}\r\n\r\nasync function post(newEntity: any, entityType: string): Promise<IPokemon> {\r\n    newEntity = {\r\n        ...newEntity,\r\n        id: _makeId()\r\n    }\r\n    const entities = await query(entityType)\r\n    entities.push(newEntity)\r\n    _save(entities, entityType)\r\n    return newEntity\r\n}\r\n\r\nasync function put(updatedEntity: any, entityType: string): Promise<IPokemon> {\r\n    const entities = await query(entityType)\r\n    const idx = entities.findIndex((entity: any) => entity.id === updatedEntity.id)\r\n    if (idx < 0) { throw new Error(`Cannot update item, id \"${updatedEntity.id}\" was not found `) }\r\n    entities[idx] = updatedEntity\r\n    _save(entities, entityType)\r\n    return updatedEntity\r\n}\r\n\r\nasync function remove(entityId: number, entityType: string): Promise<boolean> {\r\n    const entities = await query(entityType)\r\n    const idx = entities.findIndex((entity: any) => entity.id === entityId)\r\n    if (idx !== -1) entities.splice(idx, 1)\r\n    else throw new Error(`Cannot remove, item id \"${entityId}\"\" of type: ${entityType} does not exist`)\r\n    _save(entities, entityType)\r\n    return true;\r\n}\r\n\r\n\r\nfunction _save(entities: IPokemon[], entityType: string) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length: number = 5): number {\r\n    var txt = ''\r\n    var possible = '0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return +txt\r\n}","export const localStorageService = {\r\n    save,\r\n    load\r\n}\r\n\r\nfunction save(key: string, value: any) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key: string, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\n","export const utilService = {\n    makeId,\n}\n\nfunction makeId(length: number = 16): string {\n    let txt = '';\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return txt;\n}\n\n","'use strict'\r\nimport axios from 'axios'\r\nimport { storageService } from './async-storage.service';\r\nimport { httpService } from './http.service';\r\nimport { localStorageService } from './storageService';\r\nimport { utilService } from './util.service';\r\n\r\nexport const starwarsService = {\r\n    getMovies\r\n}\r\n\r\nconst STARWARS_DB: string = 'starwarsDB';\r\nconst STARWARS_API: string = 'https://swapi.dev/api/films/'\r\n\r\nasync function getMovies(): Promise<any> {\r\n    const movies = await storageService.query(STARWARS_DB) || await _getMoviesAPI()\r\n    return movies\r\n}\r\n\r\nasync function _getMoviesAPI(): Promise<any> {\r\n    const res: any = await axios.get(STARWARS_API)\r\n    const movies = res.data.results.map((result: any) => {\r\n        return {\r\n            _id: utilService.makeId(),\r\n            isFavorite: false,\r\n            title: result.title,\r\n            director: result.director,\r\n            releaseDate: result.release_date,\r\n            details: result.opening_crawl\r\n        }\r\n    })\r\n    localStorageService.save(STARWARS_DB, movies)\r\n    return movies\r\n}\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { FilmList } from '../cmp/FilmList';\r\nimport { Loading } from '../cmp/Loading';\r\nimport { starwarsService } from '../services/starwars.service'\r\n\r\nexport const FilmsApp = () => {\r\n\r\n    const [movies, setMovies] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        loadMovies()\r\n    }, [])\r\n\r\n    const loadMovies = async () => {\r\n        const movies = await starwarsService.getMovies()\r\n        setMovies(movies)\r\n    }\r\n\r\n    if (!movies) return <Loading />\r\n\r\n    return (\r\n        <section className=\"films-app\">\r\n            <FilmList movies={movies} />\r\n        </section>\r\n    )\r\n}\r\n","import { FilmsApp } from \"../pages/FilmsApp\";\n\ninterface IRoutes {\n    path: string,\n    component: any\n}\n\nconst routes: IRoutes[] = [\n    {\n        path: '/',\n        component: FilmsApp,\n    }\n]\n\nexport default routes;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { AppFotter } from './cmp/AppFooter';\nimport { AppHeader } from './cmp/AppHeader';\nimport { UserMsg } from './cmp/UserMsg';\nimport routes from './routes/routes';\nimport { starwarsService } from './services/starwars.service';\n\nfunction App() {\n\n  return (\n    <div className=\"main-container\">\n      <Router>\n        <UserMsg />\n        <AppHeader />\n        <main >\n          <Switch>\n            {routes.map(route => <Route key={route.path} component={route.component} path={route.path} />)}\n          </Switch>\n        </main>\n        <AppFotter />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../src/assets/styles/main.scss';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}