{"version":3,"sources":["reportWebVitals.ts","assets/imgs/github-logo.png","cmp/AppFooter.tsx","cmp/AppHeader.tsx","hooks/useForm.ts","assets/imgs/like-on.png","cmp/MoviePreview.tsx","cmp/MovieList.tsx","assets/imgs/bars-loader.svg","cmp/Loading.tsx","cmp/SideBar.tsx","services/event-bus.service.ts","cmp/UserMsg.tsx","pages/Home.tsx","services/async-storage.service.ts","services/storageService.ts","services/util.service.ts","services/starwars.service.ts","assets/imgs/like.png","cmp/LikeButton.tsx","pages/MovieDetails.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppFotter","className","src","target","href","gitHubLogo","AppHeader","initialFields","cb","useState","fields","setFields","useEffect","handleChange","value","field","name","type","checked","prevFields","useForm","txt","isFavorite","onChangeFilter","filterBy","htmlFor","id","onChange","placeholder","MoviePreview","movie","activeClassName","exact","to","_id","title","likeOn","MovieList","movies","map","Loading","Loader","alt","SideBar","length","eventBusService","on","eventName","listener","callListener","detail","window","addEventListener","removeEventListener","emit","data","dispatchEvent","CustomEvent","showSuccessMsg","showUserMsg","showErrorMsg","myBus","UserMsg","removeEvent","state","msg","this","setState","setTimeout","msgType","onClick","React","Component","Home","storageService","query","get","post","put","remove","entityType","a","delay","entities","JSON","parse","localStorage","getItem","Promise","resolve","entityId","entity","find","Error","newEntity","_makeId","push","_save","updatedEntity","idx","findIndex","splice","setItem","stringify","possible","i","charAt","Math","floor","random","localStorageService","save","key","load","defaultValue","utilService","makeId","starwarsService","getMovies","getById","updateMovie","STARWARS_DB","STARWARS_API","_getMoviesAPI","moviesToShow","regex","RegExp","filter","test","axios","res","results","result","director","releaseDate","release_date","details","opening_crawl","img","_getImg","movieId","console","log","updatedMovie","LikeButton","onLikeClick","isLike","like","MovieDetails","match","loadMovies","history","setMovie","loadMovie","params","newMovie","App","setMovies","setFilterBy","path","render","props","authed","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9e49373.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/github-logo.27e6971f.png\";","import gitHubLogo from '../assets/imgs/github-logo.png';\r\n\r\nexport function AppFotter() {\r\n    return (\r\n        <footer className=\"main-footer full\">\r\n            <div className=\"footer-logo flex direction-col align-center\">\r\n                <p className='tac'>&copy; Star Wars by Michael Uzan</p>\r\n                <img src=\"https://www.citypng.com/public/uploads/preview/-51608495204iyvpoqgita.png\" />\r\n            </div>\r\n            <div className=\"footer-desc\">\r\n                <ul className=\"social-links clean-list flex direction-row justify-center\">\r\n                    <li>\r\n                        <a target=\"_blank\" href=\"https://github.com/Michael-Uzan/starwars-frontend\">\r\n                            <p className='tac'>See Code on GitHub Here: </p>\r\n                            <img src={gitHubLogo} />\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </footer>\r\n    );\r\n}","import React from 'react'\r\nimport { useForm } from '../hooks/useForm'\r\n\r\ninterface PropType {\r\n    onChangeFilter: () => void\r\n}\r\n\r\nexport const AppHeader = ({ onChangeFilter }: any) => {\r\n\r\n    const [filterBy, handleChange] = useForm({\r\n        txt: '',\r\n        isFavorite: false,\r\n    }, onChangeFilter)\r\n\r\n    const { txt, isFavorite } = filterBy\r\n\r\n    return (\r\n        <header className=\" main-header full flex direction-col \">\r\n            <div className=\"top-header flex\">\r\n                <img src=\"https://logodownload.org/wp-content/uploads/2015/12/star-wars-logo.png\" />\r\n            </div>\r\n            <form className=\"filter flex  \">\r\n                <div className='flex align-center'>\r\n                    <label htmlFor=\"txt\">Movie title: </label>\r\n                    <input className=\"search\" value={txt} type=\"text\" id=\"txt\" name=\"txt\" onChange={handleChange} placeholder='Search movie' />\r\n                </div>\r\n                <div className='flex align-center'>\r\n                    <input value={isFavorite} type=\"checkbox\" id=\"isFavorite\" name=\"isFavorite\" onChange={handleChange} />\r\n                    <label htmlFor=\"isFavorite\">Only favorite</label>\r\n                </div>\r\n            </form>\r\n        </header>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport const useForm = (initialFields: any, cb: Function = () => { }) => {\r\n\r\n  const [fields, setFields] = useState(initialFields)\r\n\r\n  useEffect(() => {\r\n    cb(fields)\r\n  }, [fields])\r\n\r\n  const handleChange = ({ target }: any) => {\r\n    const field: string = target.name\r\n    let value: boolean | number | string;\r\n    switch (target.type) {\r\n      case \"number\":\r\n        value = +target.value\r\n        break\r\n      case \"checkbox\":\r\n        value = target.checked\r\n        break\r\n      default:\r\n        value = target.value\r\n        break;\r\n    }\r\n    setFields((prevFields: any) => ({ ...prevFields, [field]: value }))\r\n  }\r\n\r\n  return [\r\n    fields,\r\n    handleChange,\r\n    setFields\r\n  ]\r\n}","export default __webpack_public_path__ + \"static/media/like-on.429596b9.png\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport IMovie from '../interface/IMovie.interface'\r\nimport likeOn from '../assets/imgs/like-on.png';\r\n\r\ninterface PropType {\r\n    movie: IMovie\r\n}\r\n\r\nexport const MoviePreview = ({ movie }: PropType) => {\r\n    return (\r\n        <section className=\"movie-preview\">\r\n            <NavLink activeClassName=\"active\" exact to={`/movie/${movie._id}`}>\r\n                <div>{movie.title}</div>\r\n                {movie.isFavorite && <img src={likeOn} />}\r\n            </NavLink>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport IMovie from '../interface/IMovie.interface'\r\nimport { MoviePreview } from './MoviePreview'\r\n\r\ninterface PropType {\r\n    movies: IMovie[],\r\n}\r\n\r\nexport const MovieList = ({ movies }: PropType) => {\r\n    return (\r\n        <nav className=\"nav-movie-list\">\r\n            {movies.map((movie: IMovie) => (<MoviePreview key={movie._id} movie={movie} />))}\r\n        </nav>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bars-loader.a83d3395.svg\";","import React from 'react';\r\nimport Loader from '../assets/imgs/bars-loader.svg';\r\n\r\nexport function Loading() {\r\n    return (\r\n        <div className=\"loader flex align-center justify-center\">\r\n            <img src={Loader} alt=\"loading...\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport IMovie from '../interface/IMovie.interface';\r\nimport { MovieList } from './MovieList';\r\nimport { Loading } from './Loading';\r\n\r\ninterface PropType {\r\n    movies: IMovie[] | null\r\n}\r\n\r\nexport const SideBar = ({ movies }: PropType) => {\r\n\r\n    if (!movies) return <Loading />\r\n\r\n    return (\r\n        <aside className=\"side-bar\">\r\n            <MovieList movies={movies} />\r\n            {!movies.length && <p className=\"no-results\">Sorry no results...</p>}\r\n        </aside>\r\n    )\r\n}\r\n","export const eventBusService = {\r\n    on,\r\n    emit,\r\n    showSuccessMsg,\r\n    showErrorMsg\r\n};\r\n\r\nfunction on(eventName: string, listener: any) {\r\n\r\n    const callListener = ({ detail }: any) => {\r\n        listener(detail);\r\n    };\r\n\r\n    window.addEventListener(eventName, callListener);\r\n\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener);\r\n    };\r\n}\r\n\r\nfunction emit(eventName: string, data: any) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\n\r\nexport function showUserMsg(txt: string, type: string = '') {\r\n    eventBusService.emit('show-user-msg', { txt, type })\r\n}\r\nexport function showSuccessMsg(txt: string) {\r\n    showUserMsg(txt, 'success')\r\n}\r\nexport function showErrorMsg(txt: string) {\r\n    showUserMsg(txt, 'danger')\r\n}\r\n\r\nwindow.myBus = eventBusService;\r\nwindow.showUserMsg = showUserMsg;\r\n\r\n\r\ndeclare global {\r\n    interface Window { myBus: any, showUserMsg: any }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport { eventBusService } from '../services/event-bus.service'\r\n\r\n\r\nexport class UserMsg extends React.Component {\r\n\r\n  removeEvent: any;\r\n\r\n  state: any | null = {\r\n    msg: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.removeEvent = eventBusService.on('show-user-msg', (msg: string) => {\r\n      this.setState({ msg })\r\n      setTimeout(() => {\r\n        this.setState({ msg: null })\r\n      }, 5500)\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvent()\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.msg) return <></>\r\n    const msgType = this.state.msg.type || ''\r\n    return (\r\n      <section className={`user-msg  flex direction-row align-center ${msgType}`}>\r\n        <div className=\" txt-msg flex direction-row align-center\">\r\n          {this.state.msg.txt}\r\n        </div>\r\n        <button onClick={() => {\r\n          this.setState({ msg: null })\r\n        }}>x</button>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <section className=\"home tac\">\r\n            <h1>Welcome to Star Wars!!</h1>\r\n            <h3>Choose your favorite movie</h3>\r\n        </section>\r\n    )\r\n}\r\n","import IMovie from \"../interface/IMovie.interface\"\r\nexport const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n}\r\n\r\nasync function query(entityType: string, delay = 200): Promise<any> {\r\n    const entities = JSON.parse(localStorage.getItem(entityType) || 'null')\r\n    return new Promise((resolve) => setTimeout(resolve, delay, entities))\r\n}\r\n\r\nasync function get(entityId: string, entityType: string): Promise<IMovie> {\r\n    const entities = await query(entityType)\r\n    const entity = entities.find((entity: any) => entity?._id === entityId)\r\n    if (!entity) throw new Error(`Cannot get, Item ${entityId} of type: ${entityType} does not exist`)\r\n    return entity;\r\n}\r\n\r\nasync function post(newEntity: any, entityType: string): Promise<IMovie> {\r\n    newEntity = {\r\n        ...newEntity,\r\n        _id: _makeId()\r\n    }\r\n    const entities = await query(entityType)\r\n    entities.push(newEntity)\r\n    _save(entities, entityType)\r\n    return newEntity\r\n}\r\n\r\nasync function put(updatedEntity: any, entityType: string): Promise<IMovie> {\r\n    const entities = await query(entityType)\r\n    const idx = entities.findIndex((entity: any) => entity._id === updatedEntity._id)\r\n    if (idx < 0) { throw new Error(`Cannot update item, id \"${updatedEntity.id}\" was not found `) }\r\n    entities[idx] = updatedEntity\r\n    _save(entities, entityType)\r\n    return updatedEntity\r\n}\r\n\r\nasync function remove(entityId: number, entityType: string): Promise<boolean> {\r\n    const entities = await query(entityType)\r\n    const idx = entities.findIndex((entity: any) => entity._id === entityId)\r\n    if (idx !== -1) entities.splice(idx, 1)\r\n    else throw new Error(`Cannot remove, item id \"${entityId}\"\" of type: ${entityType} does not exist`)\r\n    _save(entities, entityType)\r\n    return true;\r\n}\r\n\r\n\r\nfunction _save(entities: IMovie[], entityType: string) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length: number = 5): number {\r\n    var txt = ''\r\n    var possible = '0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return +txt\r\n}","export const localStorageService = {\r\n    save,\r\n    load\r\n}\r\n\r\nfunction save(key: string, value: any) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key: string, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\n","export const utilService = {\r\n    makeId,\r\n}\r\n\r\nfunction makeId(length: number = 16): string {\r\n    let txt = '';\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\n","'use strict'\r\nimport axios from 'axios'\r\nimport IFilter from '../interface/IFilter.interface';\r\nimport IMovie from '../interface/IMovie.interface';\r\nimport { storageService } from './async-storage.service';\r\nimport { localStorageService } from './storageService';\r\nimport { utilService } from './util.service';\r\n\r\nexport const starwarsService = {\r\n    getMovies,\r\n    getById,\r\n    updateMovie\r\n}\r\n\r\nconst STARWARS_DB: string = 'starwarsDB';\r\nconst STARWARS_API: string = 'https://swapi.dev/api/films/'\r\n\r\nasync function getMovies(filterBy: IFilter): Promise<IMovie[]> {\r\n    const movies = await storageService.query(STARWARS_DB) || await _getMoviesAPI()\r\n    let moviesToShow = JSON.parse(JSON.stringify(movies))\r\n    if (filterBy) {\r\n        const { isFavorite, txt } = filterBy\r\n        const regex = new RegExp(txt, \"i\");\r\n        moviesToShow = moviesToShow.filter((movie: IMovie) => {\r\n            return (regex.test(movie.title)\r\n                && (isFavorite ? movie.isFavorite : true))\r\n        })\r\n    }\r\n    return moviesToShow\r\n}\r\n\r\nasync function _getMoviesAPI(): Promise<IMovie[]> {\r\n    const res: any = await axios.get(STARWARS_API)\r\n    const movies = res.data.results.map((result: any) => {\r\n        return {\r\n            _id: utilService.makeId(),\r\n            isFavorite: (Math.random() < 0.5),\r\n            title: result.title,\r\n            director: result.director,\r\n            releaseDate: result.release_date,\r\n            details: result.opening_crawl,\r\n            img: _getImg(result.title)\r\n        }\r\n    })\r\n    localStorageService.save(STARWARS_DB, movies)\r\n    return movies\r\n}\r\n\r\nasync function getById(movieId: string): Promise<any> {\r\n    try {\r\n        const movie = await storageService.get(movieId, STARWARS_DB)\r\n        return movie\r\n    } catch (err) {\r\n        console.log('error get an item', err)\r\n    }\r\n}\r\n\r\nasync function updateMovie(movie: IMovie): Promise<IMovie> {\r\n    const updatedMovie = await storageService.put(movie, STARWARS_DB)\r\n    return updatedMovie\r\n}\r\n\r\nfunction _getImg(title: string): string {\r\n    switch (title) {\r\n        case 'A New Hope':\r\n            return 'https://images-na.ssl-images-amazon.com/images/I/81aA7hEEykL.jpg'\r\n        case 'The Empire Strikes Back':\r\n            return 'https://images-na.ssl-images-amazon.com/images/I/91eOgodm4nL.jpg'\r\n        case 'Return of the Jedi':\r\n            return 'https://images-na.ssl-images-amazon.com/images/I/81g8vEs4ixL.jpg'\r\n        case 'The Phantom Menace':\r\n            return 'https://m.media-amazon.com/images/I/71rFhtOvY+L._SL1372_.jpg'\r\n        case 'Attack of the Clones':\r\n            return 'https://upload.wikimedia.org/wikipedia/en/thumb/5/5d/Attackoftheclones_novel.jpg/220px-Attackoftheclones_novel.jpg'\r\n        case 'Revenge of the Sith':\r\n            return 'https://i.ebayimg.com/images/g/J-cAAMXQMmJROYZf/s-l500.jpg'\r\n        default:\r\n            return 'https://images-na.ssl-images-amazon.com/images/I/81aA7hEEykL.jpg'\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/like.22cafb25.png\";","import React from 'react'\r\nimport like from '../assets/imgs/like.png';\r\nimport likeOn from '../assets/imgs/like-on.png';\r\n\r\ninterface PropType {\r\n    onLikeClick: Function,\r\n    isLike: boolean\r\n}\r\n\r\nexport const LikeButton = ({ onLikeClick, isLike }: PropType) => {\r\n\r\n    const getIsLiked = () => {\r\n        return isLike ? likeOn : like\r\n    }\r\n\r\n    return (\r\n        <section className=\"like-button\">\r\n            <button onClick={() => onLikeClick()}>\r\n                <img className='heart' src={getIsLiked()} />\r\n            </button>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Loading } from '../cmp/Loading';\r\nimport { starwarsService } from '../services/starwars.service';\r\nimport { LikeButton } from '../cmp/LikeButton';\r\n\r\nexport const MovieDetails = ({ match, loadMovies, history }: any) => {\r\n\r\n    const [movie, setMovie] = useState<any>(null);\r\n\r\n    useEffect(() => {\r\n        loadMovie();\r\n    }, [match.params.movieId]);\r\n\r\n    const loadMovie = async () => {\r\n        const { movieId } = match.params;\r\n        const movie = await starwarsService.getById(movieId)\r\n        if (movie) setMovie(movie)\r\n        else history.push('/')\r\n    };\r\n\r\n    const onLikeClick = async () => {\r\n        const newMovie = JSON.parse(JSON.stringify(movie))\r\n        newMovie.isFavorite = !newMovie.isFavorite\r\n        const updatedMovie = await starwarsService.updateMovie(newMovie)\r\n        setMovie(updatedMovie)\r\n        loadMovies()\r\n    }\r\n\r\n    if (!movie) return <Loading />\r\n\r\n    return (\r\n        <section className=\"movie-details tac \">\r\n            <div className=\"flex space-around\">\r\n                <div className=\"title flex align-center\">\r\n                    <h1>{movie.title}</h1>\r\n                    <LikeButton isLike={movie.isFavorite} onLikeClick={onLikeClick} />\r\n                </div>\r\n            </div>\r\n            <section className=\"main-details flex\">\r\n                <div>\r\n                    <img src={movie.img} />\r\n                </div>\r\n                <div className=\"tac\">\r\n                    <h3>Director: {movie.director}</h3>\r\n                    <h4>Release Date: {movie.releaseDate}</h4>\r\n                    <p>{movie.details}</p>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { AppFotter } from './cmp/AppFooter';\r\nimport { AppHeader } from './cmp/AppHeader';\r\nimport { SideBar } from './cmp/SideBar';\r\nimport { UserMsg } from './cmp/UserMsg';\r\nimport IFilter from './interface/IFilter.interface';\r\nimport { Home } from './pages/Home';\r\nimport { MovieDetails } from './pages/MovieDetails';\r\nimport { eventBusService } from './services/event-bus.service';\r\nimport { starwarsService } from './services/starwars.service';\r\n\r\nfunction App() {\r\n\r\n  const [movies, setMovies] = useState<any>(null);\r\n  const [filterBy, setFilterBy] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    eventBusService.showSuccessMsg('Welcome!!!')\r\n    loadMovies()\r\n  }, [])\r\n\r\n  const loadMovies = async () => {\r\n    const movies = await starwarsService.getMovies(filterBy)\r\n    setMovies(movies)\r\n  }\r\n\r\n  const onChangeFilter = async (filterBy: IFilter) => {\r\n    setFilterBy(filterBy)\r\n    const movies = await starwarsService.getMovies(filterBy)\r\n    setMovies(movies)\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-app\">\r\n      <Router>\r\n        <UserMsg />\r\n        <AppHeader onChangeFilter={onChangeFilter} />\r\n        <main className='main-content' >\r\n          <SideBar movies={movies} />\r\n          <Switch>\r\n            <Route path='/movie/:movieId'\r\n              render={(props) => (\r\n                <MovieDetails {...props} loadMovies={loadMovies} authed={true} />\r\n              )}\r\n            />\r\n            <Route path='/' component={Home} />\r\n          </Switch>\r\n        </main>\r\n        <AppFotter />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../src/assets/styles/main.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}